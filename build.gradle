apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.example.fsonphone"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    ////扫码
    implementation 'me.dm7.barcodescanner:zxing:1.7.2'
    implementation files('src/main/jniLibs/Msc.jar')
    implementation files('libs/commons-net-3.6.jar')
    implementation files('libs/android-async-http-1.4.6.jar')
    implementation project(path: ':usbCameraCommon')
    implementation project(path: ':libuvccamera-release')
    implementation("com.serenegiant:common:2.5.1") {
        exclude module: 'support-v4'
    }

    repositories {
        jcenter()
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'http://raw.github.com/saki4510t/libcommon/master/repository/' }
    }
}

buildscript {
    repositories {
        mavenCentral()
        google() // or jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
    }
}

allprojects {
    repositories {
//    	google()
        maven { url 'https://maven.google.com' }
        jcenter()
        maven { url 'http://raw.github.com/saki4510t/libcommon/master/repository/' }
    }
}

repositories {
    google()
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}